name: Deploy To Staging Environment 2
on:
  pull_request:
    types: [opened, reopened, ready_for_review, review_requested, synchronize]
    branches:
      - 'main'
jobs:
  deploy-to-airflow:
    runs-on: ubuntu-latest
    steps:
      - name: Run
        run: |
          echo "${{ github.head_ref }}  ---- ${{ github.event.pull_request.head.ref }}"
  detect-file-changes:
    if: github.head_ref == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Run
        run: exit 1
  airflow-env-refresh:
    needs: [deploy-to-airflow, detect-file-changes]
    runs-on: ubuntu-latest
    steps:
      - name: Run
        run: exit 0
  notify-failure:
    if: ${{ failure() }}
    needs: [detect-file-changes, deploy-to-airflow, airflow-env-refresh]
    runs-on: ubuntu-latest
    steps:
      # why we need this? because we need the PR number in the Slack message, and further we don't need to
      # specify the output variable at job level, as steps in the same job have access to each other's outputs.
      - name: Get the PR number
        id: get-pr-number
        run: |
          pr_num=$(echo "${{ github.ref_name }}" | cut -d'/' -f1)
          echo "pr_num=$pr_num" >> $GITHUB_OUTPUT
      - name: Set job status emojis
        id: status-emojis
        run: |
          function mark() {
            case "$1" in
              success) echo ":white_check_mark:" ;;
              failure) echo ":x:" ;;
              skipped) echo ":double_vertical_bar:" ;;
              cancelled) echo ":no_entry_sign:" ;;
              *) echo ":grey_question:" ;;
            esac
          }

          deploy=$(mark "${{ needs.deploy-to-airflow.result }}")
          detect=$(mark "${{ needs.detect-file-changes.result }}")
          refresh=$(mark "${{ needs.airflow-env-refresh.result }}")

          echo "deploy=$deploy" >> $GITHUB_OUTPUT
          echo "detect=$detect" >> $GITHUB_OUTPUT
          echo "refresh=$refresh" >> $GITHUB_OUTPUT
      - name: Send Slack message on failure
        uses: slackapi/slack-github-action@v2
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          method: chat.postMessage
          payload: |
            {
              "channel": "#test-dataset-notifications",
              "text": "ðŸš¨ Workflow Failed: Deploy to Airflow staging environment",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "ðŸš¨ PR#${{ steps.get-pr-number.outputs.pr_num }} Workflow Failed: Deploy to Airflow staging environment"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Workflow job status:\n*Deploy to Airflow:* `${{ needs.deploy-to-airflow.result }} ${{ steps.status-emojis.outputs.deploy }}`\n*Detect file changes:* `${{ needs.detect-file-changes.result }} ${{ steps.status-emojis.outputs.detect }}`\n*Airflow env refresh:* `${{ needs.airflow-env-refresh.result }}` ${{ steps.status-emojis.outputs.refresh }} "
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Repository:* <https://github.com/${{ github.repository }}|${{ github.repository }}>\n*Branch:* `${{ github.head_ref }}`\n"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "View the full logs here:\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|GitHub Actions Run>"
                  }
                }
              ]
            }
