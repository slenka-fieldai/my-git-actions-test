name: Create Release
on:
  workflow_dispatch:
permissions:
  contents: write
  pull-requests: write
jobs:

  create-release-branch-and-pr:
    runs-on: ubuntu-latest
    outputs:
      pr-url: ${{ steps.create-pr.outputs.pr-url }}
      pr-num: ${{ steps.create-pr.outputs.pr-num }}
    steps:
      - name: checkout develop branch
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: '1'

      # check existing release branch before creating a new one
      - name: Check for existing release branch
        run: |
          if git ls-remote --heads origin release | grep release; then
            echo "Release branch already exists. Exiting workflow"
            exit 1
          fi

      - name: Create and push release branch
        run: |
          git checkout -b release
          git push origin release

      - name: Create Pull Request
        id: create-pr
        run: |
          git fetch origin main
          mapfile -t contributors < <(git log origin/main..HEAD --pretty="%an" | sort -u)
          
          {
            echo "### Auto-generated Release PR"
            echo
            echo "This PR merges the release branch into \`main\` and deploys the changes to the STAGING environment"
            echo
            echo "Checklist for all the contributors who are part of this change are listed below:"
            echo "### âœ… Contributor Sign-off:"
            for name in "${contributors[@]}"; do
              echo "- [ ] $name"
            echo
            echo "Please review the changes, check and validate the changes in the STAGING environment before merging."
            echo
            echo "In case hotfix is required, please create a branch from release and merge it into release,"
            echo "validate in the STAGING environment, and once all the contributors have approved, merge the changes."
            done
          } > pr_body.md
          
          pr_url=$(gh pr create \
            --title "Release PR" \
            --body-file pr_body.md \
            --base main \
            --head release)
          
          echo "pr-url=$pr_url" >> $GITHUB_OUTPUT
          echo "Link: $pr_url"
          echo "PR number: ${pr_url##*/}"
          echo "pr-num=${pr_url##*/}" >> $GITHUB_OUTPUT

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  send-slack-notification:
    needs: [create-release-branch-and-pr]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
        with:
          persist-credentials: 'false'
      - name: Start the Slack workflow
        uses: slackapi/slack-github-action@v2
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              "channel": "#test-dataset-notifications",
              "text": "Hello from GitHub Actions! PR Raised!",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "PR #${{ needs.create-release-branch-and-pr.outputs.pr-num }}: GitHub Actions: Airflow Release PR"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "This PR merges the `release` branch into `main` and deploys the changes to the Airflow STAGING environment"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Please review the changes, check and validate the changes in the STAGING environment before merging."
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*GitHub PR Link:*\n<${{ needs.create-release-branch-and-pr.outputs.pr_url }}|Link to PR>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Repo:*\n<https://github.com/field-ai/core_airflow|core_airflow>"
                    }
                  ]
                }
              ]
            }