name: Create Release
on:
  workflow_dispatch:
permissions:
  contents: write
  pull-requests: write
env:
  SLACK_CHANNEL: "#test-dataset-notifications"
jobs:
  create-release-branch-and-pr:
    runs-on: ubuntu-latest
    outputs:
      pr-url: ${{ steps.create-pr.outputs.pr-url }}
      pr-num: ${{ steps.create-pr.outputs.pr-num }}
    steps:
      - name: checkout develop branch
        uses: actions/checkout@v4
        with:
          ref: develop
          fetch-depth: '1'

      # check existing release branch before creating a new one
      - name: Check for existing release branch
        run: |
          if git ls-remote --heads origin release | grep release; then
            echo "Release branch already exists. Exiting workflow"
            exit 1
          fi

      - name: Create and push release branch
        run: |
          git checkout -b release
          git push origin release

      - name: Create Pull Request
        id: create-pr
        run: |
          git fetch origin main
          mapfile -t contributors < <(git log origin/main..HEAD --pretty="%an" | sort -u)
          
          exit 1
          
          {
            echo "### Auto-generated Release PR"
            echo
            echo "This PR merges the release branch into \`main\` and deploys the changes to the STAGING environment"
            echo
            echo "Checklist for all the contributors who are part of this change are listed below:"
            echo "### âœ… Contributor Sign-off:"
            for name in "${contributors[@]}"; do
              echo "- [ ] $name"
            done
            echo
            echo "Please review the changes, check and validate the changes in the STAGING environment before merging."
            echo
            echo "In case hotfix is required, please create a branch from release and merge it into release,"
            echo "validate in the STAGING environment, and once all the contributors have approved, merge the changes."
          } > pr_body.md
          
          pr_url=$(gh pr create \
            --title "Release PR" \
            --body-file pr_body.md \
            --base main \
            --head release)
          
          echo "pr-url=$pr_url" >> $GITHUB_OUTPUT
          echo "Link: $pr_url"
          echo "PR number: ${pr_url##*/}"
          echo "pr-num=${pr_url##*/}" >> $GITHUB_OUTPUT

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  send-slack-notification:
    needs: [create-release-branch-and-pr]
    runs-on: ubuntu-latest
    steps:
      # the `text` in payload JSON is the top-level argument - it's not visible in the Slack channel message, as the blocks gets precedence,
      # however, if I remove it everything works fine though I get the warning in the GitHub Actions.
      # Why the text field kept? It's a best practice to always provide a `text` argument when posting a message.
      # The `text` is used in places where the content cannot be rendered such as: system push notifications, assistive technology such as screen readers, etc.
      - name: Start the Slack workflow
        uses: slackapi/slack-github-action@v2
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            {
              "channel": "${{ env.SLACK_CHANNEL }}",
              "text": "PR#${{ needs.create-release-branch-and-pr.outputs.pr-num }} Airflow Release PR for Staging environment",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "PR#${{ needs.create-release-branch-and-pr.outputs.pr-num }} Airflow Release PR for Staging environment"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "This PR merges the `release` branch into `main` and deploys the changes to the Airflow *Staging* environment"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "Please review the changes, check and validate the changes in the Airflow *Staging* environment."
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*GitHub PR Link:*\n<${{ needs.create-release-branch-and-pr.outputs.pr-url }}|Link to PR>"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Repo:*\n<https://github.com/field-ai/core_airflow|core_airflow>"
                    }
                  ]
                }
              ]
            }

  notify-on-failure:
    if: ${{ failure() }}
    needs: [create-release-branch-and-pr, send-slack-notification]
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - name: Send Slack message on failure
        uses: slackapi/slack-github-action@v2
        with:
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          method: chat.postMessage
          payload: |
            {
              "channel": "${{ env.SLACK_CHANNEL }}",
              "text": "ðŸš¨ Create Release workflow failed",
              "blocks": [
                {
                  "type": "header",
                  "text": {
                    "type": "plain_text",
                    "text": "ðŸš¨ Workflow Failed: Create Release"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Repository:* <https://github.com/${{ github.repository }}|${{ github.repository }}>\n*Branch:* `${{ github.ref_name }}`\n*Commit:* `${{ github.sha }}`"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "View the full logs here:\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|GitHub Actions Run>"
                  }
                }
              ]
            }
